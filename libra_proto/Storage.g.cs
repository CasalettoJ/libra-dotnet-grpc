// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: storage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Storage {

  /// <summary>Holder for reflection information generated from storage.proto</summary>
  public static partial class StorageReflection {

    #region Descriptor
    /// <summary>File descriptor for storage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StorageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1zdG9yYWdlLnByb3RvEgdzdG9yYWdlGhRnZXRfd2l0aF9wcm9vZi5wcm90",
            "bxoRbGVkZ2VyX2luZm8ucHJvdG8aEXRyYW5zYWN0aW9uLnByb3RvGhhhY2Nv",
            "dW50X3N0YXRlX2Jsb2IucHJvdG8aC3Byb29mLnByb3RvIqoBChdTYXZlVHJh",
            "bnNhY3Rpb25zUmVxdWVzdBIyCg50eG5zX3RvX2NvbW1pdBgBIAMoCzIaLnR5",
            "cGVzLlRyYW5zYWN0aW9uVG9Db21taXQSFQoNZmlyc3RfdmVyc2lvbhgCIAEo",
            "BBJEChtsZWRnZXJfaW5mb193aXRoX3NpZ25hdHVyZXMYAyABKAsyHy50eXBl",
            "cy5MZWRnZXJJbmZvV2l0aFNpZ25hdHVyZXMiGgoYU2F2ZVRyYW5zYWN0aW9u",
            "c1Jlc3BvbnNlInEKFkdldFRyYW5zYWN0aW9uc1JlcXVlc3QSFQoNc3RhcnRf",
            "dmVyc2lvbhgBIAEoBBISCgpiYXRjaF9zaXplGAIgASgEEhYKDmxlZGdlcl92",
            "ZXJzaW9uGAMgASgEEhQKDGZldGNoX2V2ZW50cxgEIAEoCCJXChdHZXRUcmFu",
            "c2FjdGlvbnNSZXNwb25zZRI8ChN0eG5fbGlzdF93aXRoX3Byb29mGAEgASgL",
            "Mh8udHlwZXMuVHJhbnNhY3Rpb25MaXN0V2l0aFByb29mIlYKKkdldEFjY291",
            "bnRTdGF0ZVdpdGhQcm9vZkJ5U3RhdGVSb290UmVxdWVzdBIPCgdhZGRyZXNz",
            "GAEgASgMEhcKD3N0YXRlX3Jvb3RfaGFzaBgCIAEoDCKZAQorR2V0QWNjb3Vu",
            "dFN0YXRlV2l0aFByb29mQnlTdGF0ZVJvb3RSZXNwb25zZRIzChJhY2NvdW50",
            "X3N0YXRlX2Jsb2IYASABKAsyFy50eXBlcy5BY2NvdW50U3RhdGVCbG9iEjUK",
            "E3NwYXJzZV9tZXJrbGVfcHJvb2YYAiABKAsyGC50eXBlcy5TcGFyc2VNZXJr",
            "bGVQcm9vZiIfCh1HZXRFeGVjdXRvclN0YXJ0dXBJbmZvUmVxdWVzdCJMCh5H",
            "ZXRFeGVjdXRvclN0YXJ0dXBJbmZvUmVzcG9uc2USKgoEaW5mbxgBIAEoCzIc",
            "LnN0b3JhZ2UuRXhlY3V0b3JTdGFydHVwSW5mbyKcAQoTRXhlY3V0b3JTdGFy",
            "dHVwSW5mbxImCgtsZWRnZXJfaW5mbxgBIAEoCzIRLnR5cGVzLkxlZGdlcklu",
            "Zm8SFgoObGF0ZXN0X3ZlcnNpb24YAiABKAQSHwoXYWNjb3VudF9zdGF0ZV9y",
            "b290X2hhc2gYAyABKAwSJAocbGVkZ2VyX2Zyb3plbl9zdWJ0cmVlX2hhc2hl",
            "cxgEIAMoDDKXBAoHU3RvcmFnZRJXChBTYXZlVHJhbnNhY3Rpb25zEiAuc3Rv",
            "cmFnZS5TYXZlVHJhbnNhY3Rpb25zUmVxdWVzdBohLnN0b3JhZ2UuU2F2ZVRy",
            "YW5zYWN0aW9uc1Jlc3BvbnNlEl8KFFVwZGF0ZVRvTGF0ZXN0TGVkZ2VyEiIu",
            "dHlwZXMuVXBkYXRlVG9MYXRlc3RMZWRnZXJSZXF1ZXN0GiMudHlwZXMuVXBk",
            "YXRlVG9MYXRlc3RMZWRnZXJSZXNwb25zZRJUCg9HZXRUcmFuc2FjdGlvbnMS",
            "Hy5zdG9yYWdlLkdldFRyYW5zYWN0aW9uc1JlcXVlc3QaIC5zdG9yYWdlLkdl",
            "dFRyYW5zYWN0aW9uc1Jlc3BvbnNlEpABCiNHZXRBY2NvdW50U3RhdGVXaXRo",
            "UHJvb2ZCeVN0YXRlUm9vdBIzLnN0b3JhZ2UuR2V0QWNjb3VudFN0YXRlV2l0",
            "aFByb29mQnlTdGF0ZVJvb3RSZXF1ZXN0GjQuc3RvcmFnZS5HZXRBY2NvdW50",
            "U3RhdGVXaXRoUHJvb2ZCeVN0YXRlUm9vdFJlc3BvbnNlEmkKFkdldEV4ZWN1",
            "dG9yU3RhcnR1cEluZm8SJi5zdG9yYWdlLkdldEV4ZWN1dG9yU3RhcnR1cElu",
            "Zm9SZXF1ZXN0Gicuc3RvcmFnZS5HZXRFeGVjdXRvclN0YXJ0dXBJbmZvUmVz",
            "cG9uc2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Types.GetWithProofReflection.Descriptor, global::Types.LedgerInfoReflection.Descriptor, global::Types.TransactionReflection.Descriptor, global::Types.AccountStateBlobReflection.Descriptor, global::Types.ProofReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Storage.SaveTransactionsRequest), global::Storage.SaveTransactionsRequest.Parser, new[]{ "TxnsToCommit", "FirstVersion", "LedgerInfoWithSignatures" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Storage.SaveTransactionsResponse), global::Storage.SaveTransactionsResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Storage.GetTransactionsRequest), global::Storage.GetTransactionsRequest.Parser, new[]{ "StartVersion", "BatchSize", "LedgerVersion", "FetchEvents" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Storage.GetTransactionsResponse), global::Storage.GetTransactionsResponse.Parser, new[]{ "TxnListWithProof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Storage.GetAccountStateWithProofByStateRootRequest), global::Storage.GetAccountStateWithProofByStateRootRequest.Parser, new[]{ "Address", "StateRootHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Storage.GetAccountStateWithProofByStateRootResponse), global::Storage.GetAccountStateWithProofByStateRootResponse.Parser, new[]{ "AccountStateBlob", "SparseMerkleProof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Storage.GetExecutorStartupInfoRequest), global::Storage.GetExecutorStartupInfoRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Storage.GetExecutorStartupInfoResponse), global::Storage.GetExecutorStartupInfoResponse.Parser, new[]{ "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Storage.ExecutorStartupInfo), global::Storage.ExecutorStartupInfo.Parser, new[]{ "LedgerInfo", "LatestVersion", "AccountStateRootHash", "LedgerFrozenSubtreeHashes" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SaveTransactionsRequest : pb::IMessage<SaveTransactionsRequest> {
    private static readonly pb::MessageParser<SaveTransactionsRequest> _parser = new pb::MessageParser<SaveTransactionsRequest>(() => new SaveTransactionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveTransactionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Storage.StorageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveTransactionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveTransactionsRequest(SaveTransactionsRequest other) : this() {
      txnsToCommit_ = other.txnsToCommit_.Clone();
      firstVersion_ = other.firstVersion_;
      ledgerInfoWithSignatures_ = other.ledgerInfoWithSignatures_ != null ? other.ledgerInfoWithSignatures_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveTransactionsRequest Clone() {
      return new SaveTransactionsRequest(this);
    }

    /// <summary>Field number for the "txns_to_commit" field.</summary>
    public const int TxnsToCommitFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Types.TransactionToCommit> _repeated_txnsToCommit_codec
        = pb::FieldCodec.ForMessage(10, global::Types.TransactionToCommit.Parser);
    private readonly pbc::RepeatedField<global::Types.TransactionToCommit> txnsToCommit_ = new pbc::RepeatedField<global::Types.TransactionToCommit>();
    /// <summary>
    /// Transactions to persist.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Types.TransactionToCommit> TxnsToCommit {
      get { return txnsToCommit_; }
    }

    /// <summary>Field number for the "first_version" field.</summary>
    public const int FirstVersionFieldNumber = 2;
    private ulong firstVersion_;
    /// <summary>
    /// The version of the first transaction in `txns_to_commit`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FirstVersion {
      get { return firstVersion_; }
      set {
        firstVersion_ = value;
      }
    }

    /// <summary>Field number for the "ledger_info_with_signatures" field.</summary>
    public const int LedgerInfoWithSignaturesFieldNumber = 3;
    private global::Types.LedgerInfoWithSignatures ledgerInfoWithSignatures_;
    /// <summary>
    /// If this is set, Storage will check its state after applying the above
    /// transactions matches info in this LedgerInfo before committing otherwise
    /// it denies the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.LedgerInfoWithSignatures LedgerInfoWithSignatures {
      get { return ledgerInfoWithSignatures_; }
      set {
        ledgerInfoWithSignatures_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveTransactionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveTransactionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!txnsToCommit_.Equals(other.txnsToCommit_)) return false;
      if (FirstVersion != other.FirstVersion) return false;
      if (!object.Equals(LedgerInfoWithSignatures, other.LedgerInfoWithSignatures)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= txnsToCommit_.GetHashCode();
      if (FirstVersion != 0UL) hash ^= FirstVersion.GetHashCode();
      if (ledgerInfoWithSignatures_ != null) hash ^= LedgerInfoWithSignatures.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      txnsToCommit_.WriteTo(output, _repeated_txnsToCommit_codec);
      if (FirstVersion != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(FirstVersion);
      }
      if (ledgerInfoWithSignatures_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LedgerInfoWithSignatures);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += txnsToCommit_.CalculateSize(_repeated_txnsToCommit_codec);
      if (FirstVersion != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FirstVersion);
      }
      if (ledgerInfoWithSignatures_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LedgerInfoWithSignatures);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveTransactionsRequest other) {
      if (other == null) {
        return;
      }
      txnsToCommit_.Add(other.txnsToCommit_);
      if (other.FirstVersion != 0UL) {
        FirstVersion = other.FirstVersion;
      }
      if (other.ledgerInfoWithSignatures_ != null) {
        if (ledgerInfoWithSignatures_ == null) {
          LedgerInfoWithSignatures = new global::Types.LedgerInfoWithSignatures();
        }
        LedgerInfoWithSignatures.MergeFrom(other.LedgerInfoWithSignatures);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            txnsToCommit_.AddEntriesFrom(input, _repeated_txnsToCommit_codec);
            break;
          }
          case 16: {
            FirstVersion = input.ReadUInt64();
            break;
          }
          case 26: {
            if (ledgerInfoWithSignatures_ == null) {
              LedgerInfoWithSignatures = new global::Types.LedgerInfoWithSignatures();
            }
            input.ReadMessage(LedgerInfoWithSignatures);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveTransactionsResponse : pb::IMessage<SaveTransactionsResponse> {
    private static readonly pb::MessageParser<SaveTransactionsResponse> _parser = new pb::MessageParser<SaveTransactionsResponse>(() => new SaveTransactionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveTransactionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Storage.StorageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveTransactionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveTransactionsResponse(SaveTransactionsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveTransactionsResponse Clone() {
      return new SaveTransactionsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveTransactionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveTransactionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveTransactionsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetTransactionsRequest : pb::IMessage<GetTransactionsRequest> {
    private static readonly pb::MessageParser<GetTransactionsRequest> _parser = new pb::MessageParser<GetTransactionsRequest>(() => new GetTransactionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Storage.StorageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsRequest(GetTransactionsRequest other) : this() {
      startVersion_ = other.startVersion_;
      batchSize_ = other.batchSize_;
      ledgerVersion_ = other.ledgerVersion_;
      fetchEvents_ = other.fetchEvents_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsRequest Clone() {
      return new GetTransactionsRequest(this);
    }

    /// <summary>Field number for the "start_version" field.</summary>
    public const int StartVersionFieldNumber = 1;
    private ulong startVersion_;
    /// <summary>
    /// The version to start with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StartVersion {
      get { return startVersion_; }
      set {
        startVersion_ = value;
      }
    }

    /// <summary>Field number for the "batch_size" field.</summary>
    public const int BatchSizeFieldNumber = 2;
    private ulong batchSize_;
    /// <summary>
    /// The size of the transaction batch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BatchSize {
      get { return batchSize_; }
      set {
        batchSize_ = value;
      }
    }

    /// <summary>Field number for the "ledger_version" field.</summary>
    public const int LedgerVersionFieldNumber = 3;
    private ulong ledgerVersion_;
    /// <summary>
    /// All the proofs returned in the response should be relative to this
    /// given version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LedgerVersion {
      get { return ledgerVersion_; }
      set {
        ledgerVersion_ = value;
      }
    }

    /// <summary>Field number for the "fetch_events" field.</summary>
    public const int FetchEventsFieldNumber = 4;
    private bool fetchEvents_;
    /// <summary>
    /// Used to return the events associated with each transaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FetchEvents {
      get { return fetchEvents_; }
      set {
        fetchEvents_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartVersion != other.StartVersion) return false;
      if (BatchSize != other.BatchSize) return false;
      if (LedgerVersion != other.LedgerVersion) return false;
      if (FetchEvents != other.FetchEvents) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartVersion != 0UL) hash ^= StartVersion.GetHashCode();
      if (BatchSize != 0UL) hash ^= BatchSize.GetHashCode();
      if (LedgerVersion != 0UL) hash ^= LedgerVersion.GetHashCode();
      if (FetchEvents != false) hash ^= FetchEvents.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartVersion != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(StartVersion);
      }
      if (BatchSize != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BatchSize);
      }
      if (LedgerVersion != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LedgerVersion);
      }
      if (FetchEvents != false) {
        output.WriteRawTag(32);
        output.WriteBool(FetchEvents);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartVersion != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartVersion);
      }
      if (BatchSize != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BatchSize);
      }
      if (LedgerVersion != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LedgerVersion);
      }
      if (FetchEvents != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.StartVersion != 0UL) {
        StartVersion = other.StartVersion;
      }
      if (other.BatchSize != 0UL) {
        BatchSize = other.BatchSize;
      }
      if (other.LedgerVersion != 0UL) {
        LedgerVersion = other.LedgerVersion;
      }
      if (other.FetchEvents != false) {
        FetchEvents = other.FetchEvents;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartVersion = input.ReadUInt64();
            break;
          }
          case 16: {
            BatchSize = input.ReadUInt64();
            break;
          }
          case 24: {
            LedgerVersion = input.ReadUInt64();
            break;
          }
          case 32: {
            FetchEvents = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTransactionsResponse : pb::IMessage<GetTransactionsResponse> {
    private static readonly pb::MessageParser<GetTransactionsResponse> _parser = new pb::MessageParser<GetTransactionsResponse>(() => new GetTransactionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Storage.StorageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsResponse(GetTransactionsResponse other) : this() {
      txnListWithProof_ = other.txnListWithProof_ != null ? other.txnListWithProof_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionsResponse Clone() {
      return new GetTransactionsResponse(this);
    }

    /// <summary>Field number for the "txn_list_with_proof" field.</summary>
    public const int TxnListWithProofFieldNumber = 1;
    private global::Types.TransactionListWithProof txnListWithProof_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.TransactionListWithProof TxnListWithProof {
      get { return txnListWithProof_; }
      set {
        txnListWithProof_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TxnListWithProof, other.TxnListWithProof)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (txnListWithProof_ != null) hash ^= TxnListWithProof.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (txnListWithProof_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TxnListWithProof);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (txnListWithProof_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TxnListWithProof);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionsResponse other) {
      if (other == null) {
        return;
      }
      if (other.txnListWithProof_ != null) {
        if (txnListWithProof_ == null) {
          TxnListWithProof = new global::Types.TransactionListWithProof();
        }
        TxnListWithProof.MergeFrom(other.TxnListWithProof);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (txnListWithProof_ == null) {
              TxnListWithProof = new global::Types.TransactionListWithProof();
            }
            input.ReadMessage(TxnListWithProof);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountStateWithProofByStateRootRequest : pb::IMessage<GetAccountStateWithProofByStateRootRequest> {
    private static readonly pb::MessageParser<GetAccountStateWithProofByStateRootRequest> _parser = new pb::MessageParser<GetAccountStateWithProofByStateRootRequest>(() => new GetAccountStateWithProofByStateRootRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountStateWithProofByStateRootRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Storage.StorageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateWithProofByStateRootRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateWithProofByStateRootRequest(GetAccountStateWithProofByStateRootRequest other) : this() {
      address_ = other.address_;
      stateRootHash_ = other.stateRootHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateWithProofByStateRootRequest Clone() {
      return new GetAccountStateWithProofByStateRootRequest(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private pb::ByteString address_ = pb::ByteString.Empty;
    /// <summary>
    //// The account address to query with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state_root_hash" field.</summary>
    public const int StateRootHashFieldNumber = 2;
    private pb::ByteString stateRootHash_ = pb::ByteString.Empty;
    /// <summary>
    //// The state root hash the query is based on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString StateRootHash {
      get { return stateRootHash_; }
      set {
        stateRootHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountStateWithProofByStateRootRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountStateWithProofByStateRootRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (StateRootHash != other.StateRootHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (StateRootHash.Length != 0) hash ^= StateRootHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Address);
      }
      if (StateRootHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StateRootHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
      }
      if (StateRootHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StateRootHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountStateWithProofByStateRootRequest other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.StateRootHash.Length != 0) {
        StateRootHash = other.StateRootHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadBytes();
            break;
          }
          case 18: {
            StateRootHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountStateWithProofByStateRootResponse : pb::IMessage<GetAccountStateWithProofByStateRootResponse> {
    private static readonly pb::MessageParser<GetAccountStateWithProofByStateRootResponse> _parser = new pb::MessageParser<GetAccountStateWithProofByStateRootResponse>(() => new GetAccountStateWithProofByStateRootResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountStateWithProofByStateRootResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Storage.StorageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateWithProofByStateRootResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateWithProofByStateRootResponse(GetAccountStateWithProofByStateRootResponse other) : this() {
      accountStateBlob_ = other.accountStateBlob_ != null ? other.accountStateBlob_.Clone() : null;
      sparseMerkleProof_ = other.sparseMerkleProof_ != null ? other.sparseMerkleProof_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateWithProofByStateRootResponse Clone() {
      return new GetAccountStateWithProofByStateRootResponse(this);
    }

    /// <summary>Field number for the "account_state_blob" field.</summary>
    public const int AccountStateBlobFieldNumber = 1;
    private global::Types.AccountStateBlob accountStateBlob_;
    /// <summary>
    //// The optional blob of account state blob.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.AccountStateBlob AccountStateBlob {
      get { return accountStateBlob_; }
      set {
        accountStateBlob_ = value;
      }
    }

    /// <summary>Field number for the "sparse_merkle_proof" field.</summary>
    public const int SparseMerkleProofFieldNumber = 2;
    private global::Types.SparseMerkleProof sparseMerkleProof_;
    /// <summary>
    //// The state root hash the query is based on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.SparseMerkleProof SparseMerkleProof {
      get { return sparseMerkleProof_; }
      set {
        sparseMerkleProof_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountStateWithProofByStateRootResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountStateWithProofByStateRootResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountStateBlob, other.AccountStateBlob)) return false;
      if (!object.Equals(SparseMerkleProof, other.SparseMerkleProof)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accountStateBlob_ != null) hash ^= AccountStateBlob.GetHashCode();
      if (sparseMerkleProof_ != null) hash ^= SparseMerkleProof.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accountStateBlob_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountStateBlob);
      }
      if (sparseMerkleProof_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SparseMerkleProof);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accountStateBlob_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountStateBlob);
      }
      if (sparseMerkleProof_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SparseMerkleProof);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountStateWithProofByStateRootResponse other) {
      if (other == null) {
        return;
      }
      if (other.accountStateBlob_ != null) {
        if (accountStateBlob_ == null) {
          AccountStateBlob = new global::Types.AccountStateBlob();
        }
        AccountStateBlob.MergeFrom(other.AccountStateBlob);
      }
      if (other.sparseMerkleProof_ != null) {
        if (sparseMerkleProof_ == null) {
          SparseMerkleProof = new global::Types.SparseMerkleProof();
        }
        SparseMerkleProof.MergeFrom(other.SparseMerkleProof);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accountStateBlob_ == null) {
              AccountStateBlob = new global::Types.AccountStateBlob();
            }
            input.ReadMessage(AccountStateBlob);
            break;
          }
          case 18: {
            if (sparseMerkleProof_ == null) {
              SparseMerkleProof = new global::Types.SparseMerkleProof();
            }
            input.ReadMessage(SparseMerkleProof);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetExecutorStartupInfoRequest : pb::IMessage<GetExecutorStartupInfoRequest> {
    private static readonly pb::MessageParser<GetExecutorStartupInfoRequest> _parser = new pb::MessageParser<GetExecutorStartupInfoRequest>(() => new GetExecutorStartupInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetExecutorStartupInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Storage.StorageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExecutorStartupInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExecutorStartupInfoRequest(GetExecutorStartupInfoRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExecutorStartupInfoRequest Clone() {
      return new GetExecutorStartupInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetExecutorStartupInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetExecutorStartupInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetExecutorStartupInfoRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetExecutorStartupInfoResponse : pb::IMessage<GetExecutorStartupInfoResponse> {
    private static readonly pb::MessageParser<GetExecutorStartupInfoResponse> _parser = new pb::MessageParser<GetExecutorStartupInfoResponse>(() => new GetExecutorStartupInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetExecutorStartupInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Storage.StorageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExecutorStartupInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExecutorStartupInfoResponse(GetExecutorStartupInfoResponse other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExecutorStartupInfoResponse Clone() {
      return new GetExecutorStartupInfoResponse(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::Storage.ExecutorStartupInfo info_;
    /// <summary>
    /// When this is empty, Storage needs to be bootstrapped via the bootstrap API
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Storage.ExecutorStartupInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetExecutorStartupInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetExecutorStartupInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetExecutorStartupInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Storage.ExecutorStartupInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Storage.ExecutorStartupInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExecutorStartupInfo : pb::IMessage<ExecutorStartupInfo> {
    private static readonly pb::MessageParser<ExecutorStartupInfo> _parser = new pb::MessageParser<ExecutorStartupInfo>(() => new ExecutorStartupInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecutorStartupInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Storage.StorageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutorStartupInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutorStartupInfo(ExecutorStartupInfo other) : this() {
      ledgerInfo_ = other.ledgerInfo_ != null ? other.ledgerInfo_.Clone() : null;
      latestVersion_ = other.latestVersion_;
      accountStateRootHash_ = other.accountStateRootHash_;
      ledgerFrozenSubtreeHashes_ = other.ledgerFrozenSubtreeHashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutorStartupInfo Clone() {
      return new ExecutorStartupInfo(this);
    }

    /// <summary>Field number for the "ledger_info" field.</summary>
    public const int LedgerInfoFieldNumber = 1;
    private global::Types.LedgerInfo ledgerInfo_;
    /// <summary>
    /// The latest LedgerInfo. Note that at start up storage can have more
    /// transactions than the latest LedgerInfo indicates due to an incomplete
    /// start up sync.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.LedgerInfo LedgerInfo {
      get { return ledgerInfo_; }
      set {
        ledgerInfo_ = value;
      }
    }

    /// <summary>Field number for the "latest_version" field.</summary>
    public const int LatestVersionFieldNumber = 2;
    private ulong latestVersion_;
    /// <summary>
    /// The latest version. All fields below are based on this version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LatestVersion {
      get { return latestVersion_; }
      set {
        latestVersion_ = value;
      }
    }

    /// <summary>Field number for the "account_state_root_hash" field.</summary>
    public const int AccountStateRootHashFieldNumber = 3;
    private pb::ByteString accountStateRootHash_ = pb::ByteString.Empty;
    /// <summary>
    /// The latest account state root hash.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AccountStateRootHash {
      get { return accountStateRootHash_; }
      set {
        accountStateRootHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ledger_frozen_subtree_hashes" field.</summary>
    public const int LedgerFrozenSubtreeHashesFieldNumber = 4;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_ledgerFrozenSubtreeHashes_codec
        = pb::FieldCodec.ForBytes(34);
    private readonly pbc::RepeatedField<pb::ByteString> ledgerFrozenSubtreeHashes_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// From left to right, root hashes of all frozen subtrees.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> LedgerFrozenSubtreeHashes {
      get { return ledgerFrozenSubtreeHashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecutorStartupInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecutorStartupInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LedgerInfo, other.LedgerInfo)) return false;
      if (LatestVersion != other.LatestVersion) return false;
      if (AccountStateRootHash != other.AccountStateRootHash) return false;
      if(!ledgerFrozenSubtreeHashes_.Equals(other.ledgerFrozenSubtreeHashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ledgerInfo_ != null) hash ^= LedgerInfo.GetHashCode();
      if (LatestVersion != 0UL) hash ^= LatestVersion.GetHashCode();
      if (AccountStateRootHash.Length != 0) hash ^= AccountStateRootHash.GetHashCode();
      hash ^= ledgerFrozenSubtreeHashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ledgerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LedgerInfo);
      }
      if (LatestVersion != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(LatestVersion);
      }
      if (AccountStateRootHash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(AccountStateRootHash);
      }
      ledgerFrozenSubtreeHashes_.WriteTo(output, _repeated_ledgerFrozenSubtreeHashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ledgerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LedgerInfo);
      }
      if (LatestVersion != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LatestVersion);
      }
      if (AccountStateRootHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AccountStateRootHash);
      }
      size += ledgerFrozenSubtreeHashes_.CalculateSize(_repeated_ledgerFrozenSubtreeHashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecutorStartupInfo other) {
      if (other == null) {
        return;
      }
      if (other.ledgerInfo_ != null) {
        if (ledgerInfo_ == null) {
          LedgerInfo = new global::Types.LedgerInfo();
        }
        LedgerInfo.MergeFrom(other.LedgerInfo);
      }
      if (other.LatestVersion != 0UL) {
        LatestVersion = other.LatestVersion;
      }
      if (other.AccountStateRootHash.Length != 0) {
        AccountStateRootHash = other.AccountStateRootHash;
      }
      ledgerFrozenSubtreeHashes_.Add(other.ledgerFrozenSubtreeHashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ledgerInfo_ == null) {
              LedgerInfo = new global::Types.LedgerInfo();
            }
            input.ReadMessage(LedgerInfo);
            break;
          }
          case 16: {
            LatestVersion = input.ReadUInt64();
            break;
          }
          case 26: {
            AccountStateRootHash = input.ReadBytes();
            break;
          }
          case 34: {
            ledgerFrozenSubtreeHashes_.AddEntriesFrom(input, _repeated_ledgerFrozenSubtreeHashes_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
