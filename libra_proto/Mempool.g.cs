// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mempool.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mempool {

  /// <summary>Holder for reflection information generated from mempool.proto</summary>
  public static partial class MempoolReflection {

    #region Descriptor
    /// <summary>File descriptor for mempool.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MempoolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1tZW1wb29sLnByb3RvEgdtZW1wb29sGhF0cmFuc2FjdGlvbi5wcm90bxoU",
            "bWVtcG9vbF9zdGF0dXMucHJvdG8iogEKI0FkZFRyYW5zYWN0aW9uV2l0aFZh",
            "bGlkYXRpb25SZXF1ZXN0EiwKCnNpZ25lZF90eG4YASABKAsyGC50eXBlcy5T",
            "aWduZWRUcmFuc2FjdGlvbhIUCgxtYXhfZ2FzX2Nvc3QYAiABKAQSHgoWbGF0",
            "ZXN0X3NlcXVlbmNlX251bWJlchgDIAEoBBIXCg9hY2NvdW50X2JhbGFuY2UY",
            "BCABKAQidQokQWRkVHJhbnNhY3Rpb25XaXRoVmFsaWRhdGlvblJlc3BvbnNl",
            "EhcKD2N1cnJlbnRfdmVyc2lvbhgBIAEoBBI0CgZzdGF0dXMYAiABKA4yJC5t",
            "ZW1wb29sLk1lbXBvb2xBZGRUcmFuc2FjdGlvblN0YXR1cyJeCg9HZXRCbG9j",
            "a1JlcXVlc3QSFgoObWF4X2Jsb2NrX3NpemUYASABKAQSMwoMdHJhbnNhY3Rp",
            "b25zGAIgAygLMh0ubWVtcG9vbC5UcmFuc2FjdGlvbkV4Y2x1c2lvbiJBChBH",
            "ZXRCbG9ja1Jlc3BvbnNlEi0KBWJsb2NrGAEgASgLMh4udHlwZXMuU2lnbmVk",
            "VHJhbnNhY3Rpb25zQmxvY2siPwoUVHJhbnNhY3Rpb25FeGNsdXNpb24SDgoG",
            "c2VuZGVyGAEgASgMEhcKD3NlcXVlbmNlX251bWJlchgCIAEoBCJvChlDb21t",
            "aXRUcmFuc2FjdGlvbnNSZXF1ZXN0EjMKDHRyYW5zYWN0aW9ucxgBIAMoCzId",
            "Lm1lbXBvb2wuQ29tbWl0dGVkVHJhbnNhY3Rpb24SHQoVYmxvY2tfdGltZXN0",
            "YW1wX3VzZWNzGAIgASgEIhwKGkNvbW1pdFRyYW5zYWN0aW9uc1Jlc3BvbnNl",
            "IlQKFENvbW1pdHRlZFRyYW5zYWN0aW9uEg4KBnNlbmRlchgBIAEoDBIXCg9z",
            "ZXF1ZW5jZV9udW1iZXIYAiABKAQSEwoLaXNfcmVqZWN0ZWQYAyABKAgiFAoS",
            "SGVhbHRoQ2hlY2tSZXF1ZXN0IikKE0hlYWx0aENoZWNrUmVzcG9uc2USEgoK",
            "aXNfaGVhbHRoeRgBIAEoCDL4AgoHTWVtcG9vbBJ9ChxBZGRUcmFuc2FjdGlv",
            "bldpdGhWYWxpZGF0aW9uEiwubWVtcG9vbC5BZGRUcmFuc2FjdGlvbldpdGhW",
            "YWxpZGF0aW9uUmVxdWVzdBotLm1lbXBvb2wuQWRkVHJhbnNhY3Rpb25XaXRo",
            "VmFsaWRhdGlvblJlc3BvbnNlIgASQQoIR2V0QmxvY2sSGC5tZW1wb29sLkdl",
            "dEJsb2NrUmVxdWVzdBoZLm1lbXBvb2wuR2V0QmxvY2tSZXNwb25zZSIAEl8K",
            "EkNvbW1pdFRyYW5zYWN0aW9ucxIiLm1lbXBvb2wuQ29tbWl0VHJhbnNhY3Rp",
            "b25zUmVxdWVzdBojLm1lbXBvb2wuQ29tbWl0VHJhbnNhY3Rpb25zUmVzcG9u",
            "c2UiABJKCgtIZWFsdGhDaGVjaxIbLm1lbXBvb2wuSGVhbHRoQ2hlY2tSZXF1",
            "ZXN0GhwubWVtcG9vbC5IZWFsdGhDaGVja1Jlc3BvbnNlIgBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Types.TransactionReflection.Descriptor, global::Mempool.MempoolStatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mempool.AddTransactionWithValidationRequest), global::Mempool.AddTransactionWithValidationRequest.Parser, new[]{ "SignedTxn", "MaxGasCost", "LatestSequenceNumber", "AccountBalance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mempool.AddTransactionWithValidationResponse), global::Mempool.AddTransactionWithValidationResponse.Parser, new[]{ "CurrentVersion", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mempool.GetBlockRequest), global::Mempool.GetBlockRequest.Parser, new[]{ "MaxBlockSize", "Transactions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mempool.GetBlockResponse), global::Mempool.GetBlockResponse.Parser, new[]{ "Block" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mempool.TransactionExclusion), global::Mempool.TransactionExclusion.Parser, new[]{ "Sender", "SequenceNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mempool.CommitTransactionsRequest), global::Mempool.CommitTransactionsRequest.Parser, new[]{ "Transactions", "BlockTimestampUsecs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mempool.CommitTransactionsResponse), global::Mempool.CommitTransactionsResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mempool.CommittedTransaction), global::Mempool.CommittedTransaction.Parser, new[]{ "Sender", "SequenceNumber", "IsRejected" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mempool.HealthCheckRequest), global::Mempool.HealthCheckRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mempool.HealthCheckResponse), global::Mempool.HealthCheckResponse.Parser, new[]{ "IsHealthy" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AddTransactionWithValidationRequest : pb::IMessage<AddTransactionWithValidationRequest> {
    private static readonly pb::MessageParser<AddTransactionWithValidationRequest> _parser = new pb::MessageParser<AddTransactionWithValidationRequest>(() => new AddTransactionWithValidationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddTransactionWithValidationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mempool.MempoolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddTransactionWithValidationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddTransactionWithValidationRequest(AddTransactionWithValidationRequest other) : this() {
      signedTxn_ = other.signedTxn_ != null ? other.signedTxn_.Clone() : null;
      maxGasCost_ = other.maxGasCost_;
      latestSequenceNumber_ = other.latestSequenceNumber_;
      accountBalance_ = other.accountBalance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddTransactionWithValidationRequest Clone() {
      return new AddTransactionWithValidationRequest(this);
    }

    /// <summary>Field number for the "signed_txn" field.</summary>
    public const int SignedTxnFieldNumber = 1;
    private global::Types.SignedTransaction signedTxn_;
    /// <summary>
    /// Transaction from a wallet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.SignedTransaction SignedTxn {
      get { return signedTxn_; }
      set {
        signedTxn_ = value;
      }
    }

    /// <summary>Field number for the "max_gas_cost" field.</summary>
    public const int MaxGasCostFieldNumber = 2;
    private ulong maxGasCost_;
    /// <summary>
    /// Max amount of gas required to execute the transaction
    /// Without running the program, it is very difficult to determine this number,
    /// so we use the max gas specified by the signed transaction.
    /// This field is still included separately from the signed transaction so that
    /// if we have a better methodology in the future, we can more accurately
    /// specify the max gas.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxGasCost {
      get { return maxGasCost_; }
      set {
        maxGasCost_ = value;
      }
    }

    /// <summary>Field number for the "latest_sequence_number" field.</summary>
    public const int LatestSequenceNumberFieldNumber = 3;
    private ulong latestSequenceNumber_;
    /// <summary>
    /// Latest sequence number of the involved account from state db.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LatestSequenceNumber {
      get { return latestSequenceNumber_; }
      set {
        latestSequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "account_balance" field.</summary>
    public const int AccountBalanceFieldNumber = 4;
    private ulong accountBalance_;
    /// <summary>
    /// Latest account balance of the involved account from state db.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AccountBalance {
      get { return accountBalance_; }
      set {
        accountBalance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddTransactionWithValidationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddTransactionWithValidationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SignedTxn, other.SignedTxn)) return false;
      if (MaxGasCost != other.MaxGasCost) return false;
      if (LatestSequenceNumber != other.LatestSequenceNumber) return false;
      if (AccountBalance != other.AccountBalance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (signedTxn_ != null) hash ^= SignedTxn.GetHashCode();
      if (MaxGasCost != 0UL) hash ^= MaxGasCost.GetHashCode();
      if (LatestSequenceNumber != 0UL) hash ^= LatestSequenceNumber.GetHashCode();
      if (AccountBalance != 0UL) hash ^= AccountBalance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (signedTxn_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SignedTxn);
      }
      if (MaxGasCost != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(MaxGasCost);
      }
      if (LatestSequenceNumber != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LatestSequenceNumber);
      }
      if (AccountBalance != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AccountBalance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (signedTxn_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SignedTxn);
      }
      if (MaxGasCost != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxGasCost);
      }
      if (LatestSequenceNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LatestSequenceNumber);
      }
      if (AccountBalance != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AccountBalance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddTransactionWithValidationRequest other) {
      if (other == null) {
        return;
      }
      if (other.signedTxn_ != null) {
        if (signedTxn_ == null) {
          SignedTxn = new global::Types.SignedTransaction();
        }
        SignedTxn.MergeFrom(other.SignedTxn);
      }
      if (other.MaxGasCost != 0UL) {
        MaxGasCost = other.MaxGasCost;
      }
      if (other.LatestSequenceNumber != 0UL) {
        LatestSequenceNumber = other.LatestSequenceNumber;
      }
      if (other.AccountBalance != 0UL) {
        AccountBalance = other.AccountBalance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (signedTxn_ == null) {
              SignedTxn = new global::Types.SignedTransaction();
            }
            input.ReadMessage(SignedTxn);
            break;
          }
          case 16: {
            MaxGasCost = input.ReadUInt64();
            break;
          }
          case 24: {
            LatestSequenceNumber = input.ReadUInt64();
            break;
          }
          case 32: {
            AccountBalance = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddTransactionWithValidationResponse : pb::IMessage<AddTransactionWithValidationResponse> {
    private static readonly pb::MessageParser<AddTransactionWithValidationResponse> _parser = new pb::MessageParser<AddTransactionWithValidationResponse>(() => new AddTransactionWithValidationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddTransactionWithValidationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mempool.MempoolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddTransactionWithValidationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddTransactionWithValidationResponse(AddTransactionWithValidationResponse other) : this() {
      currentVersion_ = other.currentVersion_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddTransactionWithValidationResponse Clone() {
      return new AddTransactionWithValidationResponse(this);
    }

    /// <summary>Field number for the "current_version" field.</summary>
    public const int CurrentVersionFieldNumber = 1;
    private ulong currentVersion_;
    /// <summary>
    /// The ledger version at the time of the transaction submitted. The submitted
    /// transaction will have version bigger than this 'current_version'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CurrentVersion {
      get { return currentVersion_; }
      set {
        currentVersion_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Mempool.MempoolAddTransactionStatus status_ = 0;
    /// <summary>
    /// The result of the transaction submission
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mempool.MempoolAddTransactionStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddTransactionWithValidationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddTransactionWithValidationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentVersion != other.CurrentVersion) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentVersion != 0UL) hash ^= CurrentVersion.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurrentVersion != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(CurrentVersion);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentVersion != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentVersion);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddTransactionWithValidationResponse other) {
      if (other == null) {
        return;
      }
      if (other.CurrentVersion != 0UL) {
        CurrentVersion = other.CurrentVersion;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrentVersion = input.ReadUInt64();
            break;
          }
          case 16: {
            Status = (global::Mempool.MempoolAddTransactionStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// -----------------------------------------------------------------------------
  /// ---------------- GetBlock
  /// -----------------------------------------------------------------------------
  /// </summary>
  public sealed partial class GetBlockRequest : pb::IMessage<GetBlockRequest> {
    private static readonly pb::MessageParser<GetBlockRequest> _parser = new pb::MessageParser<GetBlockRequest>(() => new GetBlockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mempool.MempoolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequest(GetBlockRequest other) : this() {
      maxBlockSize_ = other.maxBlockSize_;
      transactions_ = other.transactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequest Clone() {
      return new GetBlockRequest(this);
    }

    /// <summary>Field number for the "max_block_size" field.</summary>
    public const int MaxBlockSizeFieldNumber = 1;
    private ulong maxBlockSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxBlockSize {
      get { return maxBlockSize_; }
      set {
        maxBlockSize_ = value;
      }
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mempool.TransactionExclusion> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(18, global::Mempool.TransactionExclusion.Parser);
    private readonly pbc::RepeatedField<global::Mempool.TransactionExclusion> transactions_ = new pbc::RepeatedField<global::Mempool.TransactionExclusion>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mempool.TransactionExclusion> Transactions {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxBlockSize != other.MaxBlockSize) return false;
      if(!transactions_.Equals(other.transactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxBlockSize != 0UL) hash ^= MaxBlockSize.GetHashCode();
      hash ^= transactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxBlockSize != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MaxBlockSize);
      }
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxBlockSize != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxBlockSize);
      }
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockRequest other) {
      if (other == null) {
        return;
      }
      if (other.MaxBlockSize != 0UL) {
        MaxBlockSize = other.MaxBlockSize;
      }
      transactions_.Add(other.transactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxBlockSize = input.ReadUInt64();
            break;
          }
          case 18: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBlockResponse : pb::IMessage<GetBlockResponse> {
    private static readonly pb::MessageParser<GetBlockResponse> _parser = new pb::MessageParser<GetBlockResponse>(() => new GetBlockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mempool.MempoolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponse(GetBlockResponse other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponse Clone() {
      return new GetBlockResponse(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private global::Types.SignedTransactionsBlock block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Types.SignedTransactionsBlock Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (block_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockResponse other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::Types.SignedTransactionsBlock();
        }
        Block.MergeFrom(other.Block);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (block_ == null) {
              Block = new global::Types.SignedTransactionsBlock();
            }
            input.ReadMessage(Block);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionExclusion : pb::IMessage<TransactionExclusion> {
    private static readonly pb::MessageParser<TransactionExclusion> _parser = new pb::MessageParser<TransactionExclusion>(() => new TransactionExclusion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionExclusion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mempool.MempoolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExclusion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExclusion(TransactionExclusion other) : this() {
      sender_ = other.sender_;
      sequenceNumber_ = other.sequenceNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExclusion Clone() {
      return new TransactionExclusion(this);
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 1;
    private pb::ByteString sender_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 2;
    private ulong sequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionExclusion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionExclusion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sender != other.Sender) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (SequenceNumber != 0UL) hash ^= SequenceNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sender.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Sender);
      }
      if (SequenceNumber != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SequenceNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Sender);
      }
      if (SequenceNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SequenceNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionExclusion other) {
      if (other == null) {
        return;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.SequenceNumber != 0UL) {
        SequenceNumber = other.SequenceNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Sender = input.ReadBytes();
            break;
          }
          case 16: {
            SequenceNumber = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// -----------------------------------------------------------------------------
  /// ---------------- CommitTransactions
  /// -----------------------------------------------------------------------------
  /// </summary>
  public sealed partial class CommitTransactionsRequest : pb::IMessage<CommitTransactionsRequest> {
    private static readonly pb::MessageParser<CommitTransactionsRequest> _parser = new pb::MessageParser<CommitTransactionsRequest>(() => new CommitTransactionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitTransactionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mempool.MempoolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionsRequest(CommitTransactionsRequest other) : this() {
      transactions_ = other.transactions_.Clone();
      blockTimestampUsecs_ = other.blockTimestampUsecs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionsRequest Clone() {
      return new CommitTransactionsRequest(this);
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mempool.CommittedTransaction> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(10, global::Mempool.CommittedTransaction.Parser);
    private readonly pbc::RepeatedField<global::Mempool.CommittedTransaction> transactions_ = new pbc::RepeatedField<global::Mempool.CommittedTransaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mempool.CommittedTransaction> Transactions {
      get { return transactions_; }
    }

    /// <summary>Field number for the "block_timestamp_usecs" field.</summary>
    public const int BlockTimestampUsecsFieldNumber = 2;
    private ulong blockTimestampUsecs_;
    /// <summary>
    /// agreed monotonic timestamp microseconds since the epoch for a committed block
    /// used by Mempool to GC expired transactions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlockTimestampUsecs {
      get { return blockTimestampUsecs_; }
      set {
        blockTimestampUsecs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitTransactionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitTransactionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactions_.Equals(other.transactions_)) return false;
      if (BlockTimestampUsecs != other.BlockTimestampUsecs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactions_.GetHashCode();
      if (BlockTimestampUsecs != 0UL) hash ^= BlockTimestampUsecs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (BlockTimestampUsecs != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BlockTimestampUsecs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (BlockTimestampUsecs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockTimestampUsecs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitTransactionsRequest other) {
      if (other == null) {
        return;
      }
      transactions_.Add(other.transactions_);
      if (other.BlockTimestampUsecs != 0UL) {
        BlockTimestampUsecs = other.BlockTimestampUsecs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
          case 16: {
            BlockTimestampUsecs = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommitTransactionsResponse : pb::IMessage<CommitTransactionsResponse> {
    private static readonly pb::MessageParser<CommitTransactionsResponse> _parser = new pb::MessageParser<CommitTransactionsResponse>(() => new CommitTransactionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitTransactionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mempool.MempoolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionsResponse(CommitTransactionsResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionsResponse Clone() {
      return new CommitTransactionsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitTransactionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitTransactionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitTransactionsResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CommittedTransaction : pb::IMessage<CommittedTransaction> {
    private static readonly pb::MessageParser<CommittedTransaction> _parser = new pb::MessageParser<CommittedTransaction>(() => new CommittedTransaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommittedTransaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mempool.MempoolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommittedTransaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommittedTransaction(CommittedTransaction other) : this() {
      sender_ = other.sender_;
      sequenceNumber_ = other.sequenceNumber_;
      isRejected_ = other.isRejected_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommittedTransaction Clone() {
      return new CommittedTransaction(this);
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 1;
    private pb::ByteString sender_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 2;
    private ulong sequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "is_rejected" field.</summary>
    public const int IsRejectedFieldNumber = 3;
    private bool isRejected_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRejected {
      get { return isRejected_; }
      set {
        isRejected_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommittedTransaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommittedTransaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sender != other.Sender) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      if (IsRejected != other.IsRejected) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (SequenceNumber != 0UL) hash ^= SequenceNumber.GetHashCode();
      if (IsRejected != false) hash ^= IsRejected.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sender.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Sender);
      }
      if (SequenceNumber != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SequenceNumber);
      }
      if (IsRejected != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsRejected);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Sender);
      }
      if (SequenceNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SequenceNumber);
      }
      if (IsRejected != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommittedTransaction other) {
      if (other == null) {
        return;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.SequenceNumber != 0UL) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.IsRejected != false) {
        IsRejected = other.IsRejected;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Sender = input.ReadBytes();
            break;
          }
          case 16: {
            SequenceNumber = input.ReadUInt64();
            break;
          }
          case 24: {
            IsRejected = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// -----------------------------------------------------------------------------
  /// ---------------- HealthCheck
  /// -----------------------------------------------------------------------------
  /// </summary>
  public sealed partial class HealthCheckRequest : pb::IMessage<HealthCheckRequest> {
    private static readonly pb::MessageParser<HealthCheckRequest> _parser = new pb::MessageParser<HealthCheckRequest>(() => new HealthCheckRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HealthCheckRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mempool.MempoolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest(HealthCheckRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest Clone() {
      return new HealthCheckRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HealthCheckRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HealthCheckRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HealthCheckRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class HealthCheckResponse : pb::IMessage<HealthCheckResponse> {
    private static readonly pb::MessageParser<HealthCheckResponse> _parser = new pb::MessageParser<HealthCheckResponse>(() => new HealthCheckResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HealthCheckResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mempool.MempoolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse(HealthCheckResponse other) : this() {
      isHealthy_ = other.isHealthy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse Clone() {
      return new HealthCheckResponse(this);
    }

    /// <summary>Field number for the "is_healthy" field.</summary>
    public const int IsHealthyFieldNumber = 1;
    private bool isHealthy_;
    /// <summary>
    /// Indicate whether Mempool is in healthy condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsHealthy {
      get { return isHealthy_; }
      set {
        isHealthy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HealthCheckResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HealthCheckResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsHealthy != other.IsHealthy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsHealthy != false) hash ^= IsHealthy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsHealthy != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsHealthy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsHealthy != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HealthCheckResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsHealthy != false) {
        IsHealthy = other.IsHealthy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsHealthy = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
